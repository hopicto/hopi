<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">
	<s:http auto-config="false" access-denied-page="/403.do"
		entry-point-ref="authenticationEntryPoint">
		<s:anonymous />
	</s:http>
	<bean id="filterInvocationInterceptor"
		class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<s:custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="objectDefinitionSource" ref="objectDefinitionSource" />
	</bean>
	<bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
		<s:custom-filter position="LOGOUT_FILTER" />
		<constructor-arg value="/login.jsp" />
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices" />
				<bean
					class="org.springframework.security.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/logout.do" />
	</bean>
	<!--
		<bean id="sessionRegistry"
		class="org.springframework.security.concurrent.SessionRegistryImpl"/>
		<bean id="concurrentSessionFilter"
		class="org.springframework.security.concurrent.ConcurrentSessionFilter">
		<s:custom-filter before="CONCURRENT_SESSION_FILTER" /> <property
		name="sessionRegistry" ref="sessionRegistry" /> <property
		name="expiredUrl" value="/login.jsp" /> </bean> <bean
		id="concurrentSessionController"
		class="org.springframework.security.concurrent.ConcurrentSessionControllerImpl">
		<property name="maximumSessions" value="1" /> <property
		name="sessionRegistry" ref="sessionRegistry"/> </bean>
	-->
	<bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider" />
				<ref local="anonymousAuthenticationProvider" />
				<ref local="rememberMeAuthenticationProvider" />
			</list>
		</property>
		<!--
			<property name="sessionController" ref="concurrentSessionController"
			/>
		-->
	</bean>
	<bean id="passwordEncoder"
		class="org.springframework.security.providers.encoding.Md5PasswordEncoder" />
	<bean id="saltSource"
		class="org.springframework.security.providers.dao.salt.SystemWideSaltSource">
		<property name="systemWideSalt" value="ylb0807" />
	</bean>
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="userCache" ref="userCache" />
		<property name="passwordEncoder" ref="passwordEncoder" />
		<property name="saltSource" ref="saltSource" />
	</bean>
	<bean id="anonymousAuthenticationProvider"
		class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider">
		<property name="key" value="doze5566" />
	</bean>
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
		<property name="loginFormUrl" value="/login.jsp" />
		<property name="forceHttps" value="false" />
	</bean>
	<bean id="authenticationProcessingFilter" class="com.hopi.web.security.AuthenticationProcessingFilter">
		<s:custom-filter position="AUTHENTICATION_PROCESSING_FILTER" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="useJcaptcha" value="true" />
		<property name="filterProcessesUrl" value="/login.do" />
		<property name="invalidateSessionOnSuccessfulAuthentication"
			value="true" />
		<property name="staffDao" ref="staffDao" />
	</bean>
	<bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter">
					<property name="rolePrefix" value="ROLE_" />
				</bean>
				<bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>
	<bean id="objectDefinitionSource"
		class="com.hopi.web.security.FilterInvocationDefinitionSourceImp">
		<property name="securityCache" ref="securityCache" />
		<property name="urlMatcher" ref="antUrlPathMatcher" />
	</bean>
	<bean id="antUrlPathMatcher" class="org.springframework.security.util.AntUrlPathMatcher" />
	<s:authentication-provider user-service-ref="userDetailsService" />
	<bean id="userDetailsService" class="com.hopi.web.security.UserDetailsServiceImp">
		<property name="staffDao" ref="staffDao" />
	</bean>
	<bean id="rememberMeProcessingFilter"
		class="org.springframework.security.ui.rememberme.RememberMeProcessingFilter">
		<s:custom-filter position="REMEMBER_ME_FILTER" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.ui.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="parameter" value="dozeRememberMe" />
		<property name="key" value="doze5566" />
	</bean>
	<!--
		<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider">
		<property name="key" value="doze5566" /> </bean>
	-->
	<bean id="rememberMeAuthenticationProvider" class="com.hopi.web.security.RememberMeAuthenticationProvider">
		<property name="key" value="doze5566" />
		<property name="staffDao" ref="staffDao" />
	</bean>
	<bean id="userCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager" />
		<property name="cacheName" value="userCache" />
	</bean>
	<bean id="userCache"
		class="org.springframework.security.providers.dao.cache.EhCacheBasedUserCache">
		<property name="cache" ref="userCacheBackend" />
	</bean>
	<bean id="securityCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager" />
		<property name="cacheName" value="securityCache" />
	</bean>
	<bean id="securityCache" class="com.hopi.web.cache.SecurityCacheImp">
		<property name="cache" ref="securityCacheBackend" />
		<!-- <property name="staffDao" ref="staffDao" /> -->
		<property name="resourceDao" ref="resourceDao" />
	</bean>
	<!--
		<bean id="loggerListener"
		class="org.springframework.security.event.authentication.LoggerListener">
		<property name="logInteractiveAuthenticationSuccessEvents"
		value="true" /> </bean>
	-->
	<bean id="wordGenerator"
		class="com.octo.captcha.component.word.wordgenerator.RandomWordGenerator">
		<constructor-arg value="1234567890" />
	</bean>
</beans>